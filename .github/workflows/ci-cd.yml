env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'
jobs:
  build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: terragonlabs/pno-physics-bench:latest,terragonlabs/pno-physics-bench:${{
          github.sha }}
  deploy-production:
    environment: production
    if: github.event_name == 'release'
    needs:
    - build
    - deploy-staging
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to production
      run: echo 'Deploying to production environment...' && kubectl apply -f deployment/production/
        --kubeconfig=${{ secrets.KUBECONFIG_PRODUCTION }}
  deploy-staging:
    environment: staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to staging
      run: echo 'Deploying to staging environment...' && kubectl apply -f deployment/staging/
        --kubeconfig=${{ secrets.KUBECONFIG_STAGING }}
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: pip install -e .[dev]
    - name: Run security scan
      run: pip install bandit && bandit -r src/ -f json -o security-report.json ||
        true
    - name: Run tests
      run: pytest tests/ --cov=src --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
name: PNO Physics Bench CI/CD
'on':
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    - develop
  release:
    types:
    - published
