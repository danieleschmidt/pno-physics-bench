# Extended monitoring stack for PNO Physics Bench
# Use with: docker-compose -f docker-compose.yml -f monitoring/docker-compose.monitoring.yml up

version: '3.8'

services:
  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: pno-cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: pno-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:v1.52.0
    container_name: pno-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.0
    container_name: pno-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://pno:${POSTGRES_PASSWORD:-pno_password}@postgres:5432/pno_physics_bench?sslmode=disable
    depends_on:
      - postgres
    restart: unless-stopped

  # NVIDIA GPU metrics (uncomment if using GPU)
  # dcgm-exporter:
  #   image: nvcr.io/nvidia/k8s/dcgm-exporter:3.1.7-3.1.4-ubuntu20.04
  #   container_name: pno-dcgm-exporter
  #   runtime: nvidia
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - NVIDIA_DRIVER_CAPABILITIES=compute,utility,monitoring
  #   ports:
  #     - "9400:9400"
  #   cap_add:
  #     - SYS_ADMIN
  #   restart: unless-stopped

  # Alertmanager for alerts
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: pno-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped

  # Blackbox Exporter for endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: pno-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    restart: unless-stopped

  # Loki for log aggregation
  loki:
    image: grafana/loki:2.8.0
    container_name: pno-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.8.0
    container_name: pno-promtail
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

  # ML-specific metrics collector
  ml-metrics-collector:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: pno-ml-metrics
    volumes:
      - .:/app
      - pno-results:/app/results:ro
      - pno-checkpoints:/app/checkpoints:ro
    environment:
      - PYTHONPATH=/app/src
      - METRICS_PORT=8080
    ports:
      - "8082:8080"
    command: python -m pno_physics_bench.monitoring_server
    restart: unless-stopped

volumes:
  alertmanager-data:
    driver: local
  loki-data:
    driver: local

networks:
  default:
    name: pno-network
    external: true