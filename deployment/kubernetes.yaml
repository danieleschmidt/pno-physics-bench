# Production Kubernetes Deployment for pno-physics-bench
# Complete production-ready configuration with security, monitoring, and scaling

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pno-physics-bench
  namespace: production
  labels:
    app: pno-physics-bench
    version: v1.0.0
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: pno-physics-bench
  template:
    metadata:
      labels:
        app: pno-physics-bench
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pno-physics-bench-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: pno-physics-bench
        image: pno-physics-bench:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONPATH
          value: "/app/src"
        envFrom:
        - secretRef:
            name: pno-secrets
        - configMapRef:
            name: pno-config
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pno-physics-bench
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: pno-physics-bench-service
  namespace: production
  labels:
    app: pno-physics-bench
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: metrics
  selector:
    app: pno-physics-bench

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pno-physics-bench-sa
  namespace: production

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pno-physics-bench-netpol
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: pno-physics-bench
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pno-physics-bench-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pno-physics-bench
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pno-config
  namespace: production
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      workers: 4
    
    logging:
      level: INFO
      format: json
    
    monitoring:
      enabled: true
      metrics_port: 8081
    
    model:
      cache_size: 1000
      batch_size: 32
      max_sequence_length: 512
    
    security:
      input_validation: true
      rate_limiting: true
      max_request_size: "10mb"

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pno-physics-bench-pdb
  namespace: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pno-physics-bench