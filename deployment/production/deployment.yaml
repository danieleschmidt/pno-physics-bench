apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pno-physics-bench
    component: ml-inference
    version: v1.0.0
  name: pno-physics-bench
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pno-physics-bench
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
      labels:
        app: pno-physics-bench
        version: v1.0.0
    spec:
      containers:
      - env:
        - name: ENV
          value: production
        - name: LOG_LEVEL
          value: INFO
        - name: PROMETHEUS_ENABLED
          value: 'true'
        - name: TRACING_ENABLED
          value: 'true'
        image: pno-physics-bench:v1.0.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: pno-inference
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8080
          name: metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - mountPath: /app/models
          name: model-storage
          readOnly: true
        - mountPath: /app/config
          name: config
          readOnly: true
      nodeSelector:
        node-type: ml-optimized
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      tolerations:
      - effect: NoSchedule
        key: ml-workload
        operator: Equal
        value: 'true'
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: pno-model-storage
      - configMap:
          name: pno-config
        name: config
